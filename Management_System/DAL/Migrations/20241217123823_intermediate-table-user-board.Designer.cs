// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ManagementSystem.Migrations
{
    [DbContext(typeof(ManagementSystemDBContext))]
    [Migration("20241217123823_intermediate-table-user-board")]
    partial class intermediatetableuserboard
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.BoardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1588cd3a-d404-4653-8b42-63e449b776ee"),
                            Description = "esse",
                            Name = "Walter"
                        },
                        new
                        {
                            Id = new Guid("85be6ea8-8f16-4011-90b2-b6a5e95013a6"),
                            Description = "hic",
                            Name = "Napoleon"
                        },
                        new
                        {
                            Id = new Guid("87b2c1a7-24a9-4b32-86d1-423386dac1da"),
                            Description = "pariatur",
                            Name = "Kiera"
                        },
                        new
                        {
                            Id = new Guid("e0316831-8191-4db2-b0a6-3498afddae06"),
                            Description = "inventore",
                            Name = "Eduardo"
                        });
                });

            modelBuilder.Entity("DAL.Entities.LabelEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Labels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5084e3e7-c605-4ff9-8669-d8091244a9ba"),
                            Description = "eligendi",
                            Name = "Response"
                        },
                        new
                        {
                            Id = new Guid("22053fee-2f21-4e2c-8d62-2cd6cbce2d67"),
                            Description = "error",
                            Name = "ubiquitous"
                        },
                        new
                        {
                            Id = new Guid("4a5599a0-8560-4d71-a80d-31f63830f977"),
                            Description = "impedit",
                            Name = "interface"
                        },
                        new
                        {
                            Id = new Guid("8bc74cd7-33be-4636-8778-ac9ea860e129"),
                            Description = "veritatis",
                            Name = "North Dakota"
                        });
                });

            modelBuilder.Entity("DAL.Entities.SubtaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TaskEntityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TaskEntityId");

                    b.ToTable("Subtasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("66b28082-77a7-4bb7-a4b9-3790590f97d5"),
                            Description = "ut",
                            Name = "leverage",
                            TaskId = new Guid("b47efa51-1d49-4202-a538-b42f61dfefa2")
                        },
                        new
                        {
                            Id = new Guid("e3a809eb-ad59-4298-8d15-fe280e9b16ff"),
                            Description = "ut",
                            Name = "Grocery & Electronics",
                            TaskId = new Guid("b47efa51-1d49-4202-a538-b42f61dfefa2")
                        },
                        new
                        {
                            Id = new Guid("e375bc86-fb30-46e3-b3a1-887e78cc2e6a"),
                            Description = "tempore",
                            Name = "Streets",
                            TaskId = new Guid("d87a9f92-cb25-4b54-9ef9-be91af1b20d2")
                        },
                        new
                        {
                            Id = new Guid("0c6c375f-4016-45ea-a63b-d52d078b5056"),
                            Description = "dignissimos",
                            Name = "International",
                            TaskId = new Guid("d87a9f92-cb25-4b54-9ef9-be91af1b20d2")
                        },
                        new
                        {
                            Id = new Guid("7ab1c5ab-4074-4a94-8d32-a901553a57b7"),
                            Description = "praesentium",
                            Name = "Licensed Cotton Chips",
                            TaskId = new Guid("10755e88-6cfd-4078-9034-1ff57331f396")
                        },
                        new
                        {
                            Id = new Guid("299d349c-a1cb-4086-81fe-24ba3016fab6"),
                            Description = "blanditiis",
                            Name = "Cambridgeshire",
                            TaskId = new Guid("10755e88-6cfd-4078-9034-1ff57331f396")
                        },
                        new
                        {
                            Id = new Guid("06634fcf-5873-4cc0-97cf-654aaec60911"),
                            Description = "perferendis",
                            Name = "Wisconsin",
                            TaskId = new Guid("5fe44b94-c3aa-4d9e-82b1-07840a04b790")
                        },
                        new
                        {
                            Id = new Guid("6388c064-947f-4724-b96b-6aeffb60ff2c"),
                            Description = "impedit",
                            Name = "deposit",
                            TaskId = new Guid("5fe44b94-c3aa-4d9e-82b1-07840a04b790")
                        },
                        new
                        {
                            Id = new Guid("b2e8bffe-48dd-4fbc-a23a-32ed38499941"),
                            Description = "eaque",
                            Name = "cross-platform",
                            TaskId = new Guid("a6708a3a-7955-4381-840e-1508883ece57")
                        },
                        new
                        {
                            Id = new Guid("8efa1b20-63fe-4cad-9aea-b310023eda97"),
                            Description = "illo",
                            Name = "Steel",
                            TaskId = new Guid("a6708a3a-7955-4381-840e-1508883ece57")
                        },
                        new
                        {
                            Id = new Guid("1792e3f4-3740-4aae-b70a-8e3ae8e5a0ce"),
                            Description = "voluptatibus",
                            Name = "Fords",
                            TaskId = new Guid("1812e275-d6a6-4af4-8280-ab2a3970102c")
                        },
                        new
                        {
                            Id = new Guid("c00e37b6-d0cf-4965-b6f2-ca5f6d0905e6"),
                            Description = "expedita",
                            Name = "Awesome",
                            TaskId = new Guid("1812e275-d6a6-4af4-8280-ab2a3970102c")
                        },
                        new
                        {
                            Id = new Guid("9f919842-9749-4413-9e03-637073cf5a48"),
                            Description = "dolores",
                            Name = "extensible",
                            TaskId = new Guid("6605cbbb-aaa2-4f14-8cbe-54a180492feb")
                        },
                        new
                        {
                            Id = new Guid("2c42815d-db04-49e2-b38d-d87122eb25fa"),
                            Description = "non",
                            Name = "Ergonomic Granite Chair",
                            TaskId = new Guid("6605cbbb-aaa2-4f14-8cbe-54a180492feb")
                        },
                        new
                        {
                            Id = new Guid("43bece79-5bda-41fb-a838-34222c44aee6"),
                            Description = "omnis",
                            Name = "object-oriented",
                            TaskId = new Guid("2e4e1759-918f-4c5f-92d3-b6ddee841f4e")
                        },
                        new
                        {
                            Id = new Guid("d17b018d-05b0-490f-a66a-f7ec1e256bb3"),
                            Description = "quod",
                            Name = "local",
                            TaskId = new Guid("2e4e1759-918f-4c5f-92d3-b6ddee841f4e")
                        },
                        new
                        {
                            Id = new Guid("522ab2f5-3419-4517-bba6-7781f5f3177b"),
                            Description = "ut",
                            Name = "Bulgaria",
                            TaskId = new Guid("98ca492a-8041-4327-a4e8-eb4f2a9d2ce4")
                        },
                        new
                        {
                            Id = new Guid("4ada2293-cf6a-40aa-9b60-99030f20e777"),
                            Description = "consectetur",
                            Name = "Parkways",
                            TaskId = new Guid("98ca492a-8041-4327-a4e8-eb4f2a9d2ce4")
                        },
                        new
                        {
                            Id = new Guid("8b3a8e76-2550-4dfc-9fed-5c8686d347b7"),
                            Description = "veniam",
                            Name = "Oval",
                            TaskId = new Guid("a86d0f02-291b-4082-8860-00d7f85b9879")
                        },
                        new
                        {
                            Id = new Guid("d493a641-ab59-45f9-8954-225fa9f513ed"),
                            Description = "quia",
                            Name = "infrastructure",
                            TaskId = new Guid("a86d0f02-291b-4082-8860-00d7f85b9879")
                        },
                        new
                        {
                            Id = new Guid("c050d8b4-1216-446f-ad21-61ba2340cc13"),
                            Description = "aut",
                            Name = "program",
                            TaskId = new Guid("96504248-aef8-42bc-a080-cc3dea240f5c")
                        },
                        new
                        {
                            Id = new Guid("a0130b3a-baab-4767-ad9f-a42142f33ba6"),
                            Description = "architecto",
                            Name = "Innovative",
                            TaskId = new Guid("96504248-aef8-42bc-a080-cc3dea240f5c")
                        },
                        new
                        {
                            Id = new Guid("64f363ea-3447-4aa4-81e7-9e4bda99c40a"),
                            Description = "harum",
                            Name = "COM",
                            TaskId = new Guid("586cbf1a-6328-4b6e-8f02-f23a844bd5c8")
                        },
                        new
                        {
                            Id = new Guid("8e92ec31-0fae-4d93-bcc0-a640a4fbdad8"),
                            Description = "vel",
                            Name = "Intelligent",
                            TaskId = new Guid("586cbf1a-6328-4b6e-8f02-f23a844bd5c8")
                        },
                        new
                        {
                            Id = new Guid("03635de8-9ffc-4ef9-9a0e-5e99e0ca1a8a"),
                            Description = "facilis",
                            Name = "Enhanced",
                            TaskId = new Guid("4d1af4f2-b7c6-440b-baef-54aa91faac75")
                        },
                        new
                        {
                            Id = new Guid("66516fd1-08d3-4fce-b37d-5a613c9e2689"),
                            Description = "vel",
                            Name = "Ergonomic Steel Shoes",
                            TaskId = new Guid("4d1af4f2-b7c6-440b-baef-54aa91faac75")
                        },
                        new
                        {
                            Id = new Guid("1fa6f701-47cc-4be2-a1b4-7a8cac5e6861"),
                            Description = "sunt",
                            Name = "calculate",
                            TaskId = new Guid("dc6e1ef1-951d-494c-9d8f-d99a47cd5c41")
                        },
                        new
                        {
                            Id = new Guid("2799db9e-270c-44ec-a78f-a6347a292da0"),
                            Description = "consectetur",
                            Name = "Handmade Rubber Bike",
                            TaskId = new Guid("dc6e1ef1-951d-494c-9d8f-d99a47cd5c41")
                        },
                        new
                        {
                            Id = new Guid("560ec6d6-4d3b-4325-b130-09381ee2a7a5"),
                            Description = "iusto",
                            Name = "panel",
                            TaskId = new Guid("360b2c7b-906d-4b3d-af5c-2a52f8871856")
                        },
                        new
                        {
                            Id = new Guid("68c9f4ba-63d9-4019-a916-e91dbe7bc1c7"),
                            Description = "necessitatibus",
                            Name = "Future-proofed",
                            TaskId = new Guid("360b2c7b-906d-4b3d-af5c-2a52f8871856")
                        },
                        new
                        {
                            Id = new Guid("b72b00ad-cf34-4524-a0c8-078a603d1de8"),
                            Description = "eos",
                            Name = "Response",
                            TaskId = new Guid("75c1c9d7-fec2-4654-ac17-e6ed690529f7")
                        },
                        new
                        {
                            Id = new Guid("f1af67de-2457-4617-b538-0b3199b7f19b"),
                            Description = "voluptatem",
                            Name = "Sierra Leone",
                            TaskId = new Guid("75c1c9d7-fec2-4654-ac17-e6ed690529f7")
                        });
                });

            modelBuilder.Entity("DAL.Entities.TaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("LabelEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("TableId")
                        .HasColumnType("uuid");

                    b.Property<int>("TaskEstimation")
                        .HasColumnType("integer");

                    b.Property<Guid?>("TaskStatusEntityId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("LabelEntityId");

                    b.HasIndex("TaskStatusEntityId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b47efa51-1d49-4202-a538-b42f61dfefa2"),
                            Description = "eos",
                            Name = "Rustic Wooden Computer",
                            Priority = 2,
                            SerialNumber = 1,
                            TableId = new Guid("4e67d714-df51-4626-ac3f-e5d68e9b467d"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("d87a9f92-cb25-4b54-9ef9-be91af1b20d2"),
                            Description = "fugiat",
                            Name = "Principal",
                            Priority = 3,
                            SerialNumber = 0,
                            TableId = new Guid("4e67d714-df51-4626-ac3f-e5d68e9b467d"),
                            TaskEstimation = 0
                        },
                        new
                        {
                            Id = new Guid("10755e88-6cfd-4078-9034-1ff57331f396"),
                            Description = "deleniti",
                            Name = "Walk",
                            Priority = 0,
                            SerialNumber = 1,
                            TableId = new Guid("357794c5-f0ed-4244-b0b9-15f7e154d600"),
                            TaskEstimation = 0
                        },
                        new
                        {
                            Id = new Guid("5fe44b94-c3aa-4d9e-82b1-07840a04b790"),
                            Description = "aliquid",
                            Name = "Technician",
                            Priority = 0,
                            SerialNumber = 1,
                            TableId = new Guid("357794c5-f0ed-4244-b0b9-15f7e154d600"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("a6708a3a-7955-4381-840e-1508883ece57"),
                            Description = "ut",
                            Name = "deliverables",
                            Priority = 0,
                            SerialNumber = 1,
                            TableId = new Guid("bf5359b3-fbe1-4470-8dfa-7369fdd2155a"),
                            TaskEstimation = 0
                        },
                        new
                        {
                            Id = new Guid("1812e275-d6a6-4af4-8280-ab2a3970102c"),
                            Description = "alias",
                            Name = "Concrete",
                            Priority = 0,
                            SerialNumber = 0,
                            TableId = new Guid("bf5359b3-fbe1-4470-8dfa-7369fdd2155a"),
                            TaskEstimation = 0
                        },
                        new
                        {
                            Id = new Guid("6605cbbb-aaa2-4f14-8cbe-54a180492feb"),
                            Description = "est",
                            Name = "olive",
                            Priority = 0,
                            SerialNumber = 0,
                            TableId = new Guid("5bf362cd-36fd-4d34-a8d3-010957f157f0"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("2e4e1759-918f-4c5f-92d3-b6ddee841f4e"),
                            Description = "ut",
                            Name = "hack",
                            Priority = 2,
                            SerialNumber = 1,
                            TableId = new Guid("5bf362cd-36fd-4d34-a8d3-010957f157f0"),
                            TaskEstimation = 1
                        },
                        new
                        {
                            Id = new Guid("98ca492a-8041-4327-a4e8-eb4f2a9d2ce4"),
                            Description = "aliquid",
                            Name = "Boliviano boliviano",
                            Priority = 0,
                            SerialNumber = 0,
                            TableId = new Guid("9de9f7d1-f729-470e-ba06-958592d99e98"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("a86d0f02-291b-4082-8860-00d7f85b9879"),
                            Description = "cumque",
                            Name = "Intranet",
                            Priority = 2,
                            SerialNumber = 1,
                            TableId = new Guid("9de9f7d1-f729-470e-ba06-958592d99e98"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("96504248-aef8-42bc-a080-cc3dea240f5c"),
                            Description = "qui",
                            Name = "lavender",
                            Priority = 0,
                            SerialNumber = 0,
                            TableId = new Guid("9112e278-59c4-4890-9876-914601e689e8"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("586cbf1a-6328-4b6e-8f02-f23a844bd5c8"),
                            Description = "perspiciatis",
                            Name = "SCSI",
                            Priority = 1,
                            SerialNumber = 0,
                            TableId = new Guid("9112e278-59c4-4890-9876-914601e689e8"),
                            TaskEstimation = 1
                        },
                        new
                        {
                            Id = new Guid("4d1af4f2-b7c6-440b-baef-54aa91faac75"),
                            Description = "dolores",
                            Name = "Buckinghamshire",
                            Priority = 2,
                            SerialNumber = 1,
                            TableId = new Guid("b97d7dec-6090-449f-8ae1-2cd15181a7a6"),
                            TaskEstimation = 0
                        },
                        new
                        {
                            Id = new Guid("dc6e1ef1-951d-494c-9d8f-d99a47cd5c41"),
                            Description = "rerum",
                            Name = "users",
                            Priority = 3,
                            SerialNumber = 1,
                            TableId = new Guid("b97d7dec-6090-449f-8ae1-2cd15181a7a6"),
                            TaskEstimation = 1
                        },
                        new
                        {
                            Id = new Guid("360b2c7b-906d-4b3d-af5c-2a52f8871856"),
                            Description = "cumque",
                            Name = "client-server",
                            Priority = 1,
                            SerialNumber = 1,
                            TableId = new Guid("0f17aee1-32a7-487d-96df-42f9654b22a2"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("75c1c9d7-fec2-4654-ac17-e6ed690529f7"),
                            Description = "voluptatibus",
                            Name = "convergence",
                            Priority = 1,
                            SerialNumber = 0,
                            TableId = new Guid("0f17aee1-32a7-487d-96df-42f9654b22a2"),
                            TaskEstimation = 2
                        });
                });

            modelBuilder.Entity("DAL.Entities.TaskStatusEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BoardEntityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BoardEntityId");

                    b.ToTable("TaskStatus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4e67d714-df51-4626-ac3f-e5d68e9b467d"),
                            BoardId = new Guid("1588cd3a-d404-4653-8b42-63e449b776ee"),
                            Description = "debitis",
                            Name = "In Review"
                        },
                        new
                        {
                            Id = new Guid("357794c5-f0ed-4244-b0b9-15f7e154d600"),
                            BoardId = new Guid("1588cd3a-d404-4653-8b42-63e449b776ee"),
                            Description = "iure",
                            Name = "In Review"
                        },
                        new
                        {
                            Id = new Guid("bf5359b3-fbe1-4470-8dfa-7369fdd2155a"),
                            BoardId = new Guid("85be6ea8-8f16-4011-90b2-b6a5e95013a6"),
                            Description = "ab",
                            Name = "Done"
                        },
                        new
                        {
                            Id = new Guid("5bf362cd-36fd-4d34-a8d3-010957f157f0"),
                            BoardId = new Guid("85be6ea8-8f16-4011-90b2-b6a5e95013a6"),
                            Description = "nostrum",
                            Name = "Done"
                        },
                        new
                        {
                            Id = new Guid("9de9f7d1-f729-470e-ba06-958592d99e98"),
                            BoardId = new Guid("87b2c1a7-24a9-4b32-86d1-423386dac1da"),
                            Description = "sint",
                            Name = "Done"
                        },
                        new
                        {
                            Id = new Guid("9112e278-59c4-4890-9876-914601e689e8"),
                            BoardId = new Guid("87b2c1a7-24a9-4b32-86d1-423386dac1da"),
                            Description = "odio",
                            Name = "Done"
                        },
                        new
                        {
                            Id = new Guid("b97d7dec-6090-449f-8ae1-2cd15181a7a6"),
                            BoardId = new Guid("e0316831-8191-4db2-b0a6-3498afddae06"),
                            Description = "quam",
                            Name = "In Review"
                        },
                        new
                        {
                            Id = new Guid("0f17aee1-32a7-487d-96df-42f9654b22a2"),
                            BoardId = new Guid("e0316831-8191-4db2-b0a6-3498afddae06"),
                            Description = "incidunt",
                            Name = "Done"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserBoardEntity", b =>
                {
                    b.Property<Guid>("BoardId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("BoardId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserBoards");

                    b.HasData(
                        new
                        {
                            BoardId = new Guid("85be6ea8-8f16-4011-90b2-b6a5e95013a6"),
                            UserId = new Guid("a6f6114b-801e-4562-8e44-e74106df1888"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            Role = 0
                        },
                        new
                        {
                            BoardId = new Guid("1588cd3a-d404-4653-8b42-63e449b776ee"),
                            UserId = new Guid("92b4d020-8c84-42e2-9c56-de1bc7bc4cee"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            Role = 0
                        },
                        new
                        {
                            BoardId = new Guid("85be6ea8-8f16-4011-90b2-b6a5e95013a6"),
                            UserId = new Guid("9a5c594e-d28c-47c6-a49d-dec0be63c0d9"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            Role = 0
                        },
                        new
                        {
                            BoardId = new Guid("87b2c1a7-24a9-4b32-86d1-423386dac1da"),
                            UserId = new Guid("92b4d020-8c84-42e2-9c56-de1bc7bc4cee"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            Role = 0
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a6f6114b-801e-4562-8e44-e74106df1888"),
                            Email = "Armando.Connelly@gmail.com",
                            FirstName = "Krystina",
                            LastName = "Lang"
                        },
                        new
                        {
                            Id = new Guid("92b4d020-8c84-42e2-9c56-de1bc7bc4cee"),
                            Email = "Kellie_Howe@gmail.com",
                            FirstName = "Dallin",
                            LastName = "Mraz"
                        },
                        new
                        {
                            Id = new Guid("758e1c59-080f-48b2-8a31-8e15d25843fc"),
                            Email = "Brigitte86@yahoo.com",
                            FirstName = "Emie",
                            LastName = "Tremblay"
                        },
                        new
                        {
                            Id = new Guid("9a5c594e-d28c-47c6-a49d-dec0be63c0d9"),
                            Email = "Damon69@gmail.com",
                            FirstName = "Athena",
                            LastName = "Rosenbaum"
                        });
                });

            modelBuilder.Entity("DAL.Entities.UserTaskEntity", b =>
                {
                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("TaskId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserTasks");

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("b47efa51-1d49-4202-a538-b42f61dfefa2"),
                            UserId = new Guid("a6f6114b-801e-4562-8e44-e74106df1888"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            Role = 1
                        },
                        new
                        {
                            TaskId = new Guid("2e4e1759-918f-4c5f-92d3-b6ddee841f4e"),
                            UserId = new Guid("92b4d020-8c84-42e2-9c56-de1bc7bc4cee"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            Role = 2
                        },
                        new
                        {
                            TaskId = new Guid("dc6e1ef1-951d-494c-9d8f-d99a47cd5c41"),
                            UserId = new Guid("758e1c59-080f-48b2-8a31-8e15d25843fc"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            Role = 2
                        },
                        new
                        {
                            TaskId = new Guid("75c1c9d7-fec2-4654-ac17-e6ed690529f7"),
                            UserId = new Guid("758e1c59-080f-48b2-8a31-8e15d25843fc"),
                            Id = new Guid("00000000-0000-0000-0000-000000000000"),
                            Role = 2
                        });
                });

            modelBuilder.Entity("DAL.Entities.SubtaskEntity", b =>
                {
                    b.HasOne("DAL.Entities.TaskEntity", null)
                        .WithMany("Subtasks")
                        .HasForeignKey("TaskEntityId");
                });

            modelBuilder.Entity("DAL.Entities.TaskEntity", b =>
                {
                    b.HasOne("DAL.Entities.LabelEntity", null)
                        .WithMany("Tasks")
                        .HasForeignKey("LabelEntityId");

                    b.HasOne("DAL.Entities.TaskStatusEntity", null)
                        .WithMany("Tasks")
                        .HasForeignKey("TaskStatusEntityId");
                });

            modelBuilder.Entity("DAL.Entities.TaskStatusEntity", b =>
                {
                    b.HasOne("DAL.Entities.BoardEntity", null)
                        .WithMany("TaskStatus")
                        .HasForeignKey("BoardEntityId");
                });

            modelBuilder.Entity("DAL.Entities.UserBoardEntity", b =>
                {
                    b.HasOne("DAL.Entities.BoardEntity", "Board")
                        .WithMany("UserBoards")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.UserEntity", "User")
                        .WithMany("UserBoards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.UserTaskEntity", b =>
                {
                    b.HasOne("DAL.Entities.TaskEntity", "Task")
                        .WithMany("UserTasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.UserEntity", "User")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAL.Entities.BoardEntity", b =>
                {
                    b.Navigation("TaskStatus");

                    b.Navigation("UserBoards");
                });

            modelBuilder.Entity("DAL.Entities.LabelEntity", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("DAL.Entities.TaskEntity", b =>
                {
                    b.Navigation("Subtasks");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("DAL.Entities.TaskStatusEntity", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("DAL.Entities.UserEntity", b =>
                {
                    b.Navigation("UserBoards");

                    b.Navigation("UserTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
