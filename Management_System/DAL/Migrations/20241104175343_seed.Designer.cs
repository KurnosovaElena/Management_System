// <auto-generated />
using System;
using DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ManagementSystem.Migrations
{
    [DbContext(typeof(ManagementSystemDBContext))]
    [Migration("20241104175343_seed")]
    partial class seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ManagementSystem.Entities.BoardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Boards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2061cb9-47e2-4c5a-a9a3-b203028d39c0"),
                            Description = "ratione",
                            Name = "Fatima"
                        },
                        new
                        {
                            Id = new Guid("a36735a2-4fa8-46f7-b828-667bd41e26ac"),
                            Description = "quia",
                            Name = "Ethyl"
                        },
                        new
                        {
                            Id = new Guid("3cd452d2-ed7f-4962-ae1e-3fd3cdbdc0a6"),
                            Description = "provident",
                            Name = "Mandy"
                        },
                        new
                        {
                            Id = new Guid("aa48b424-312c-4a46-a00e-bad44db24418"),
                            Description = "sunt",
                            Name = "Saige"
                        });
                });

            modelBuilder.Entity("ManagementSystem.Entities.LabelEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Labels");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9e13186d-7b1f-4826-8e53-fbe8337bfba1"),
                            Description = "quia",
                            Name = "Vermont"
                        },
                        new
                        {
                            Id = new Guid("246c4240-9f04-456f-98c3-c9b1b229051a"),
                            Description = "nulla",
                            Name = "Granite"
                        },
                        new
                        {
                            Id = new Guid("bb0bfe98-39de-4109-bab2-9f6928ba29c9"),
                            Description = "deleniti",
                            Name = "Bypass"
                        },
                        new
                        {
                            Id = new Guid("74928a01-ba48-4683-9558-6f0d04629cf8"),
                            Description = "et",
                            Name = "cross-platform"
                        });
                });

            modelBuilder.Entity("ManagementSystem.Entities.SubtaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("TaskEntityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TaskEntityId");

                    b.ToTable("Subtasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f735be83-3539-4d31-9942-8ab5a16f3953"),
                            Description = "ut",
                            Name = "Island",
                            TaskId = new Guid("d30e4cd3-ef5e-4b40-ab52-5b5fef1dfada")
                        },
                        new
                        {
                            Id = new Guid("0d184789-7a71-4923-a82a-53fc093baf7d"),
                            Description = "tempora",
                            Name = "mission-critical",
                            TaskId = new Guid("d30e4cd3-ef5e-4b40-ab52-5b5fef1dfada")
                        },
                        new
                        {
                            Id = new Guid("4f8dba1a-126b-4df7-b772-683fb2dc6014"),
                            Description = "nobis",
                            Name = "Borders",
                            TaskId = new Guid("29b1833f-3d57-491c-942f-fdb61f5b5ffb")
                        },
                        new
                        {
                            Id = new Guid("5d8fd3e2-1adf-4ea2-b743-3d2fc63861d2"),
                            Description = "aut",
                            Name = "quantifying",
                            TaskId = new Guid("29b1833f-3d57-491c-942f-fdb61f5b5ffb")
                        },
                        new
                        {
                            Id = new Guid("7daaf94a-f297-4355-b7a2-29f9154b7ecd"),
                            Description = "iusto",
                            Name = "Awesome Steel Ball",
                            TaskId = new Guid("5b8a9048-d831-46bd-98de-d547bb31b0ec")
                        },
                        new
                        {
                            Id = new Guid("862b6b48-fcf7-40a2-b18f-c806b4f9be64"),
                            Description = "et",
                            Name = "enhance",
                            TaskId = new Guid("5b8a9048-d831-46bd-98de-d547bb31b0ec")
                        },
                        new
                        {
                            Id = new Guid("60fb2494-5f89-42c4-a6e8-16b8e53f3cdd"),
                            Description = "quas",
                            Name = "JSON",
                            TaskId = new Guid("463827a9-6d7f-4c11-a839-8f43801d547e")
                        },
                        new
                        {
                            Id = new Guid("25983c6e-bde4-49f0-93c1-cc2d9308a002"),
                            Description = "accusamus",
                            Name = "iterate",
                            TaskId = new Guid("463827a9-6d7f-4c11-a839-8f43801d547e")
                        },
                        new
                        {
                            Id = new Guid("7fa5d837-4d5d-44d0-9f92-1f0a9cfd09af"),
                            Description = "quia",
                            Name = "orchid",
                            TaskId = new Guid("1ef13262-56ba-44b9-95d9-65f9f3867748")
                        },
                        new
                        {
                            Id = new Guid("f69a84aa-9b47-4b2b-8815-748110f437e0"),
                            Description = "officia",
                            Name = "Customer",
                            TaskId = new Guid("1ef13262-56ba-44b9-95d9-65f9f3867748")
                        },
                        new
                        {
                            Id = new Guid("ba738a46-7102-47a8-bcfd-79ad36281019"),
                            Description = "cupiditate",
                            Name = "streamline",
                            TaskId = new Guid("1d5a2dd5-7ee4-434e-870e-c4f392ea4c2f")
                        },
                        new
                        {
                            Id = new Guid("22d050f7-b7a4-40d5-81a2-e35c978913be"),
                            Description = "ab",
                            Name = "New Hampshire",
                            TaskId = new Guid("1d5a2dd5-7ee4-434e-870e-c4f392ea4c2f")
                        },
                        new
                        {
                            Id = new Guid("49a56778-d581-416b-becd-a1f62c45228f"),
                            Description = "deserunt",
                            Name = "Sports & Shoes",
                            TaskId = new Guid("88b32041-da1e-4c0c-b15b-084970697203")
                        },
                        new
                        {
                            Id = new Guid("675a0e0e-5de3-4031-8c27-a1c18ee8584f"),
                            Description = "quis",
                            Name = "Refined Steel Chips",
                            TaskId = new Guid("88b32041-da1e-4c0c-b15b-084970697203")
                        },
                        new
                        {
                            Id = new Guid("d59271ff-48c4-4eef-b185-d54a304cbf04"),
                            Description = "sed",
                            Name = "Kentucky",
                            TaskId = new Guid("43b792da-32ae-44b2-8626-a4034ed3401b")
                        },
                        new
                        {
                            Id = new Guid("920481fe-118c-47cf-a1dc-1a24c93bca91"),
                            Description = "ipsa",
                            Name = "payment",
                            TaskId = new Guid("43b792da-32ae-44b2-8626-a4034ed3401b")
                        },
                        new
                        {
                            Id = new Guid("a0e7d1df-8ca8-4136-8735-262e72edf965"),
                            Description = "sit",
                            Name = "RSS",
                            TaskId = new Guid("f143b162-2af7-45b6-8d2f-df6dbc6edb6a")
                        },
                        new
                        {
                            Id = new Guid("884b4b6a-fb0c-408a-a50f-f5bf22381a82"),
                            Description = "temporibus",
                            Name = "bluetooth",
                            TaskId = new Guid("f143b162-2af7-45b6-8d2f-df6dbc6edb6a")
                        },
                        new
                        {
                            Id = new Guid("bdd355c0-a254-4c58-9623-c97e4c393681"),
                            Description = "harum",
                            Name = "pricing structure",
                            TaskId = new Guid("98970e5b-64a1-4e78-9540-057bddbb0447")
                        },
                        new
                        {
                            Id = new Guid("f7f7a38a-a28e-4b1e-8b60-84a6db1d9228"),
                            Description = "excepturi",
                            Name = "Baby",
                            TaskId = new Guid("98970e5b-64a1-4e78-9540-057bddbb0447")
                        },
                        new
                        {
                            Id = new Guid("8e90035d-b0e6-4b7b-ab4c-da7824d8560f"),
                            Description = "ipsam",
                            Name = "Generic",
                            TaskId = new Guid("d9378565-188c-423a-90a0-a405e7cdd2b2")
                        },
                        new
                        {
                            Id = new Guid("a5bce1e5-670b-4cd8-a7cf-60692b0180bc"),
                            Description = "est",
                            Name = "back-end",
                            TaskId = new Guid("d9378565-188c-423a-90a0-a405e7cdd2b2")
                        },
                        new
                        {
                            Id = new Guid("f07461f4-31e1-4d5c-88dc-07dab780b2ba"),
                            Description = "quo",
                            Name = "target",
                            TaskId = new Guid("241e871d-8f3f-4cb9-9f42-f0592a89545d")
                        },
                        new
                        {
                            Id = new Guid("da25ada7-83c9-4a51-bfdf-93ce0f2be82f"),
                            Description = "quia",
                            Name = "Iowa",
                            TaskId = new Guid("241e871d-8f3f-4cb9-9f42-f0592a89545d")
                        },
                        new
                        {
                            Id = new Guid("560af9a2-adbb-4286-8460-3a78fd8fbd54"),
                            Description = "excepturi",
                            Name = "Senior",
                            TaskId = new Guid("e21249b5-22e1-452c-a23e-ef39b724fba2")
                        },
                        new
                        {
                            Id = new Guid("39211922-134c-4b25-bad1-d34e7f0e9b14"),
                            Description = "neque",
                            Name = "Idaho",
                            TaskId = new Guid("e21249b5-22e1-452c-a23e-ef39b724fba2")
                        },
                        new
                        {
                            Id = new Guid("dca932fa-4977-4fdc-8d8b-f66e3fb939ff"),
                            Description = "culpa",
                            Name = "Alaska",
                            TaskId = new Guid("df3e4d06-ccef-49f8-a6e5-805620337255")
                        },
                        new
                        {
                            Id = new Guid("c29c5ec1-1daa-4c4d-a2b1-06aa3ba1593b"),
                            Description = "nemo",
                            Name = "Ohio",
                            TaskId = new Guid("df3e4d06-ccef-49f8-a6e5-805620337255")
                        },
                        new
                        {
                            Id = new Guid("e43bbb72-5027-4273-8c36-d719c54670ea"),
                            Description = "in",
                            Name = "Rustic Cotton Salad",
                            TaskId = new Guid("66cedd9d-6e2a-41e2-88b9-cd1cc6663917")
                        },
                        new
                        {
                            Id = new Guid("890b4610-031b-4bff-be8d-670a49d876f6"),
                            Description = "molestiae",
                            Name = "Sleek Soft Tuna",
                            TaskId = new Guid("66cedd9d-6e2a-41e2-88b9-cd1cc6663917")
                        },
                        new
                        {
                            Id = new Guid("68a8d8e5-f417-4c09-8395-29277a00f9bc"),
                            Description = "iste",
                            Name = "Street",
                            TaskId = new Guid("b956edfb-ad94-4fbb-8b48-091a64808ed5")
                        },
                        new
                        {
                            Id = new Guid("dc761dfa-5f70-4681-9dec-4f30e01c678d"),
                            Description = "adipisci",
                            Name = "Cambridgeshire",
                            TaskId = new Guid("b956edfb-ad94-4fbb-8b48-091a64808ed5")
                        });
                });

            modelBuilder.Entity("ManagementSystem.Entities.TableEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("BoardEntityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("BoardEntityId");

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fbd85795-77da-41e1-8b7c-83a0655ec292"),
                            BoardId = new Guid("f2061cb9-47e2-4c5a-a9a3-b203028d39c0"),
                            Description = "",
                            Name = "Backlog"
                        },
                        new
                        {
                            Id = new Guid("1852ff7b-b4cd-47f2-9b8f-fbbe7a7b23ba"),
                            BoardId = new Guid("f2061cb9-47e2-4c5a-a9a3-b203028d39c0"),
                            Description = "",
                            Name = "Backlog"
                        },
                        new
                        {
                            Id = new Guid("412bfb6a-7133-40a6-a537-a1f75cefe9b4"),
                            BoardId = new Guid("a36735a2-4fa8-46f7-b828-667bd41e26ac"),
                            Description = "",
                            Name = "In Progress"
                        },
                        new
                        {
                            Id = new Guid("8fe0f55e-904d-410b-8723-64a98570464c"),
                            BoardId = new Guid("a36735a2-4fa8-46f7-b828-667bd41e26ac"),
                            Description = "",
                            Name = "Done"
                        },
                        new
                        {
                            Id = new Guid("0d949b66-c7c6-408e-bc39-39f854c9af44"),
                            BoardId = new Guid("3cd452d2-ed7f-4962-ae1e-3fd3cdbdc0a6"),
                            Description = "",
                            Name = "In Progress"
                        },
                        new
                        {
                            Id = new Guid("1e359fc3-c319-4b7f-9010-a09069944f3b"),
                            BoardId = new Guid("3cd452d2-ed7f-4962-ae1e-3fd3cdbdc0a6"),
                            Description = "",
                            Name = "Backlog"
                        },
                        new
                        {
                            Id = new Guid("638eeee1-b56a-4ff0-b66f-453b55e3917e"),
                            BoardId = new Guid("aa48b424-312c-4a46-a00e-bad44db24418"),
                            Description = "",
                            Name = "In Progress"
                        },
                        new
                        {
                            Id = new Guid("bb7d08e8-1777-4085-8ed2-6c3719b6056f"),
                            BoardId = new Guid("aa48b424-312c-4a46-a00e-bad44db24418"),
                            Description = "",
                            Name = "In Review"
                        });
                });

            modelBuilder.Entity("ManagementSystem.Entities.TaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("LabelEntityId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Priority")
                        .HasColumnType("integer");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("integer");

                    b.Property<Guid?>("TableEntityId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TableId")
                        .HasColumnType("uuid");

                    b.Property<int>("TaskEstimation")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LabelEntityId");

                    b.HasIndex("TableEntityId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d30e4cd3-ef5e-4b40-ab52-5b5fef1dfada"),
                            Description = "et",
                            Name = "fault-tolerant",
                            Priority = 0,
                            SerialNumber = 1,
                            TableId = new Guid("fbd85795-77da-41e1-8b7c-83a0655ec292"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("29b1833f-3d57-491c-942f-fdb61f5b5ffb"),
                            Description = "iusto",
                            Name = "fuchsia",
                            Priority = 1,
                            SerialNumber = 1,
                            TableId = new Guid("fbd85795-77da-41e1-8b7c-83a0655ec292"),
                            TaskEstimation = 0
                        },
                        new
                        {
                            Id = new Guid("5b8a9048-d831-46bd-98de-d547bb31b0ec"),
                            Description = "reprehenderit",
                            Name = "revolutionize",
                            Priority = 3,
                            SerialNumber = 1,
                            TableId = new Guid("1852ff7b-b4cd-47f2-9b8f-fbbe7a7b23ba"),
                            TaskEstimation = 1
                        },
                        new
                        {
                            Id = new Guid("463827a9-6d7f-4c11-a839-8f43801d547e"),
                            Description = "error",
                            Name = "dedicated",
                            Priority = 1,
                            SerialNumber = 0,
                            TableId = new Guid("1852ff7b-b4cd-47f2-9b8f-fbbe7a7b23ba"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("1ef13262-56ba-44b9-95d9-65f9f3867748"),
                            Description = "eos",
                            Name = "Avon",
                            Priority = 1,
                            SerialNumber = 0,
                            TableId = new Guid("412bfb6a-7133-40a6-a537-a1f75cefe9b4"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("1d5a2dd5-7ee4-434e-870e-c4f392ea4c2f"),
                            Description = "esse",
                            Name = "Berkshire",
                            Priority = 1,
                            SerialNumber = 1,
                            TableId = new Guid("412bfb6a-7133-40a6-a537-a1f75cefe9b4"),
                            TaskEstimation = 0
                        },
                        new
                        {
                            Id = new Guid("88b32041-da1e-4c0c-b15b-084970697203"),
                            Description = "minima",
                            Name = "Dynamic",
                            Priority = 1,
                            SerialNumber = 0,
                            TableId = new Guid("8fe0f55e-904d-410b-8723-64a98570464c"),
                            TaskEstimation = 1
                        },
                        new
                        {
                            Id = new Guid("43b792da-32ae-44b2-8626-a4034ed3401b"),
                            Description = "odit",
                            Name = "generating",
                            Priority = 1,
                            SerialNumber = 1,
                            TableId = new Guid("8fe0f55e-904d-410b-8723-64a98570464c"),
                            TaskEstimation = 0
                        },
                        new
                        {
                            Id = new Guid("f143b162-2af7-45b6-8d2f-df6dbc6edb6a"),
                            Description = "sit",
                            Name = "USB",
                            Priority = 2,
                            SerialNumber = 1,
                            TableId = new Guid("0d949b66-c7c6-408e-bc39-39f854c9af44"),
                            TaskEstimation = 1
                        },
                        new
                        {
                            Id = new Guid("98970e5b-64a1-4e78-9540-057bddbb0447"),
                            Description = "nobis",
                            Name = "Granite",
                            Priority = 2,
                            SerialNumber = 0,
                            TableId = new Guid("0d949b66-c7c6-408e-bc39-39f854c9af44"),
                            TaskEstimation = 0
                        },
                        new
                        {
                            Id = new Guid("d9378565-188c-423a-90a0-a405e7cdd2b2"),
                            Description = "non",
                            Name = "program",
                            Priority = 2,
                            SerialNumber = 1,
                            TableId = new Guid("1e359fc3-c319-4b7f-9010-a09069944f3b"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("241e871d-8f3f-4cb9-9f42-f0592a89545d"),
                            Description = "vero",
                            Name = "Handmade Fresh Fish",
                            Priority = 2,
                            SerialNumber = 1,
                            TableId = new Guid("1e359fc3-c319-4b7f-9010-a09069944f3b"),
                            TaskEstimation = 0
                        },
                        new
                        {
                            Id = new Guid("e21249b5-22e1-452c-a23e-ef39b724fba2"),
                            Description = "harum",
                            Name = "Manager",
                            Priority = 1,
                            SerialNumber = 1,
                            TableId = new Guid("638eeee1-b56a-4ff0-b66f-453b55e3917e"),
                            TaskEstimation = 2
                        },
                        new
                        {
                            Id = new Guid("df3e4d06-ccef-49f8-a6e5-805620337255"),
                            Description = "velit",
                            Name = "website",
                            Priority = 1,
                            SerialNumber = 0,
                            TableId = new Guid("638eeee1-b56a-4ff0-b66f-453b55e3917e"),
                            TaskEstimation = 1
                        },
                        new
                        {
                            Id = new Guid("66cedd9d-6e2a-41e2-88b9-cd1cc6663917"),
                            Description = "eos",
                            Name = "Sharable",
                            Priority = 0,
                            SerialNumber = 1,
                            TableId = new Guid("bb7d08e8-1777-4085-8ed2-6c3719b6056f"),
                            TaskEstimation = 1
                        },
                        new
                        {
                            Id = new Guid("b956edfb-ad94-4fbb-8b48-091a64808ed5"),
                            Description = "eaque",
                            Name = "Configuration",
                            Priority = 3,
                            SerialNumber = 1,
                            TableId = new Guid("bb7d08e8-1777-4085-8ed2-6c3719b6056f"),
                            TaskEstimation = 2
                        });
                });

            modelBuilder.Entity("ManagementSystem.Entities.UserBoardEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("BoardId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "BoardId");

                    b.HasIndex("BoardId");

                    b.ToTable("UserBoards");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("1a77520f-faf9-47cc-9f2d-24dc37d7907a"),
                            BoardId = new Guid("f2061cb9-47e2-4c5a-a9a3-b203028d39c0")
                        },
                        new
                        {
                            UserId = new Guid("1a77520f-faf9-47cc-9f2d-24dc37d7907a"),
                            BoardId = new Guid("a36735a2-4fa8-46f7-b828-667bd41e26ac")
                        },
                        new
                        {
                            UserId = new Guid("1a77520f-faf9-47cc-9f2d-24dc37d7907a"),
                            BoardId = new Guid("3cd452d2-ed7f-4962-ae1e-3fd3cdbdc0a6")
                        },
                        new
                        {
                            UserId = new Guid("5121d59f-82d3-4541-b7a3-ed47ae8db674"),
                            BoardId = new Guid("f2061cb9-47e2-4c5a-a9a3-b203028d39c0")
                        });
                });

            modelBuilder.Entity("ManagementSystem.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a77520f-faf9-47cc-9f2d-24dc37d7907a"),
                            Email = "Dallin_Schaden@gmail.com",
                            FirstName = "Cale",
                            LastName = "Connelly"
                        },
                        new
                        {
                            Id = new Guid("5121d59f-82d3-4541-b7a3-ed47ae8db674"),
                            Email = "Hiram_Oberbrunner36@yahoo.com",
                            FirstName = "Kendra",
                            LastName = "Mann"
                        },
                        new
                        {
                            Id = new Guid("03d71447-da7c-4ba1-aa3d-bd73fb038bd0"),
                            Email = "Neal_Krajcik@hotmail.com",
                            FirstName = "Chaz",
                            LastName = "Effertz"
                        },
                        new
                        {
                            Id = new Guid("ed29892b-1880-408e-bda3-73a6492477bb"),
                            Email = "Boyd43@gmail.com",
                            FirstName = "Kira",
                            LastName = "Maggio"
                        });
                });

            modelBuilder.Entity("ManagementSystem.Entities.UserTaskEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "TaskId");

                    b.HasIndex("TaskId");

                    b.ToTable("UserTasks");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("5121d59f-82d3-4541-b7a3-ed47ae8db674"),
                            TaskId = new Guid("29b1833f-3d57-491c-942f-fdb61f5b5ffb"),
                            Role = 1
                        },
                        new
                        {
                            UserId = new Guid("5121d59f-82d3-4541-b7a3-ed47ae8db674"),
                            TaskId = new Guid("88b32041-da1e-4c0c-b15b-084970697203"),
                            Role = 1
                        },
                        new
                        {
                            UserId = new Guid("1a77520f-faf9-47cc-9f2d-24dc37d7907a"),
                            TaskId = new Guid("1d5a2dd5-7ee4-434e-870e-c4f392ea4c2f"),
                            Role = 1
                        },
                        new
                        {
                            UserId = new Guid("5121d59f-82d3-4541-b7a3-ed47ae8db674"),
                            TaskId = new Guid("df3e4d06-ccef-49f8-a6e5-805620337255"),
                            Role = 2
                        });
                });

            modelBuilder.Entity("ManagementSystem.Entities.SubtaskEntity", b =>
                {
                    b.HasOne("ManagementSystem.Entities.TaskEntity", null)
                        .WithMany("Subtasks")
                        .HasForeignKey("TaskEntityId");
                });

            modelBuilder.Entity("ManagementSystem.Entities.TableEntity", b =>
                {
                    b.HasOne("ManagementSystem.Entities.BoardEntity", null)
                        .WithMany("Tables")
                        .HasForeignKey("BoardEntityId");
                });

            modelBuilder.Entity("ManagementSystem.Entities.TaskEntity", b =>
                {
                    b.HasOne("ManagementSystem.Entities.LabelEntity", null)
                        .WithMany("Tasks")
                        .HasForeignKey("LabelEntityId");

                    b.HasOne("ManagementSystem.Entities.TableEntity", null)
                        .WithMany("Tasks")
                        .HasForeignKey("TableEntityId");
                });

            modelBuilder.Entity("ManagementSystem.Entities.UserBoardEntity", b =>
                {
                    b.HasOne("ManagementSystem.Entities.BoardEntity", "Board")
                        .WithMany("UserBoards")
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Entities.UserEntity", "User")
                        .WithMany("UserBoards")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Board");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManagementSystem.Entities.UserTaskEntity", b =>
                {
                    b.HasOne("ManagementSystem.Entities.TaskEntity", "Task")
                        .WithMany("UserTasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManagementSystem.Entities.UserEntity", "User")
                        .WithMany("UserTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManagementSystem.Entities.BoardEntity", b =>
                {
                    b.Navigation("Tables");

                    b.Navigation("UserBoards");
                });

            modelBuilder.Entity("ManagementSystem.Entities.LabelEntity", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ManagementSystem.Entities.TableEntity", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("ManagementSystem.Entities.TaskEntity", b =>
                {
                    b.Navigation("Subtasks");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("ManagementSystem.Entities.UserEntity", b =>
                {
                    b.Navigation("UserBoards");

                    b.Navigation("UserTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
